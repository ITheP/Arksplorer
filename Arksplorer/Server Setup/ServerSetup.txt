Arksplorer works on data generated by ArkViewer and hosted on a web site.

You can find more information about ArkViewer at https://github.com/miragedmuk/ARKViewer-Master

ARKViewer can generate data that shows things like the location of all wild/tame dinos, and chuck it out as json data for other purposes.
In our case, we host this on a web site, where Arksplorer can download this data onto players pc's and use it to feed into its interface.

And of course to make it available on a web site, you need to be running one! That is also beyond the scope of this document. Hopefully you already run one for your server :)

Arksplorer requires a few things setting up on the server side to operate properly.

The following is taken from Wiredcat Ark server (Thanks DuoMog who runs it for all the help/info/scripts!). You may need to change things to fit your server set up...

1. ArkViewer

Install arkviewer. Installing it is nothing more than copying the files to your preferred location.

Latest pre-compiled version at time of documenting this can be found at http://www.miragesoftware.co.uk/Ark/Apps/ArkViewer2021-4.zip

The install location used in the RunDinoListingOnSaveFile.bat batch file is set to C:\ArkTools\ArkViewer2021_4_20210502

If your install location is different to this, please change the batch file accordingly.

Miragedmuk (who wrote ArkViewer) has brilliantly made it open source as well, so you can also get the source code, especially
good if you want to compile the latest version. You can find it at https://github.com/miragedmuk/ARKViewer-Master

You can find further posts about ArkViewer on the official Ark Forums https://survivetheark.com/index.php?/forums/

2. Generating the data

Firstly, on the Wiredcat server, there is a script that runs when the server boots that creates backups of maps, does wildcard stuff,
etc. and it is likely you have an equivalent to start up your Ark server.
When there is a server reboot, it also runs a script.
The reboot script creates a file called \ArkServer\Rebooting.txt
The startup script deletes any file called \ArkServer\Rebooting.txt
This is used by the batch file RunDinoListing.bat to check if the server is being rebooted - and if it is, make sure it stops running.
It is recommended that you have the same mechanism in place, and edit the RunDinoListing.bat if the location/filename is different to the above.

Secondly, copy the RunDinoListing.bat and RunDinoListingOnSaveFile.bat files to where you want to run them from.
In our case we use c:\ArkServer\
If you dont want to install it here, please check the batch files for any changes where you might need to reference other files/locations.
These batch files are included in the same folder as this file.

Thirdly, review both the .bat files above, check if they look ok and also check the comments for anything you might need to twiddle.
Note that the RunDinoListing.bat basically just polls for updated saved game data, and when found then calls
the RunDinoListingOnSaveFile.bat to create the json data we want, once for each map.

Fourthly, when the server/MS windows boots, we kick off the RunDinoList.bat batch file.
In our case, we simply press the Windows+R key to get a standard windows Run dialog to appear, and enter shell:startup
and click ok. In the explorer window that appears, we put a short cut to the RunDinoListing.bat batch file.
You can always run this file in another way if you prefer.
This file will run in the background, checking for updated save data every 60 seconds.

Note that while waiting the script doesn't use any resources/cpu.

Fithly, in RunDinoListingOnSaveFile.bat a destination is required for where the generated .json data files are saved. We use Z:\Apache24\htdocs
but you can replace this with any other folder. If you need to host this somewhere fancy or get these data files onto an external web site somewhere, then you will have to do this.
We just run a web server on the same server that runs the Ark server.

So when the above is up and running, you should end up with a series of json files that Arksplorer can then access to get at all that lovely dino data!
   Wild.json      <-- where all wild dinos are
   Dinos.json     <-- where all tame dinos are
   Survivors.json <-- where all survivors are
   Timestamp.json <-- this is a special extra .json file generated that just has a timestamp when the data was last refreshed
These are generated on a per-map basis.

There should be a structure as follows...
/your.web.site.folder.where.you.store.your.files/.../<mapname>/<jsonfile>.json
Hopefully you will then end up with...
http://your.web.site/.../<mapname>/<jsonfile>.json

e.g. in our case, for Ragnarok this is
http://wiredcat.hopto.org/WiredcatRagnarok/Wild.json
http://wiredcat.hopto.org/WiredcatRagnarok/Dinos.json
http://wiredcat.hopto.org/WiredcatRagnarok/Survivors.json
http://wiredcat.hopto.org/WiredcatRagnarok/timestamp.json
...and a equivalents for other maps.

3. Hosting the data

You also need to host the file ArksplorerData.json on the web site.
This file is used by Arksplorer when it starts up to load in a bit of information about your server along with what your websites URL's
are (see above) to go get the various peices of data hosted there.
This means that end users don't have to worry about configurations - its controlled your end, and you can change it as required.

An example ArksplorerData.json is included in the same folder as this file.

4. Letting the client know about your server

Give us at Arksplorer a shout where your web sites URL ArksplorerData.json is so we can add it to the clients predefined list of servers.
We just need 3 bits of information...

{
    "Name": "WiredCat",
    "Website": "http://wiredcat.hopto.org/",
     "Url": "http://wiredcat.hopto.org/ArksplorerData.json"
}

The name of your ark server
Your public facing web site (so users can find you easily if they want to go looking)
And the Url to the ArksplorerData.json

Then when users start Arksplorer you will be part of the drop down list of sites they can select from...
Arksplorer will go get the config file from your server
Then it knows where to read in the data itself.

Magic!

Alternatively, you don't even have to contact us. You can simply publish this information yourself (probably far quicker than us putting out an update too :) )
Define a .json file containing the information listed above, and give a copy to your players to copy into their .../Arksplorer/Servers/ folder.
Arskplorer will scan this folder and pick up any .json server definition files and add them into the interface when it runs.
There is are example `YourServer.json` and `YourServers.json` files here you can look at, for both a single server and multi server set up.
You can specify as many servers as you want in a multi-server variant - it is just a list of server information.

Good luck :)